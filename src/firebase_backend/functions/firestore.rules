rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             request.auth.token.admin == true;
    }
    
    function isDoctor() {
      return isAuthenticated() && 
             request.auth.token.userType == 'doctor';
    }
    
    function isPatient() {
      return isAuthenticated() && 
             request.auth.token.userType == 'patient';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && 
                      request.auth.uid == userId &&
                      isValidUserData();
      allow update: if (isOwner(userId) || isAdmin()) &&
                      isValidUserData();
      allow delete: if isAdmin();
      
      function isValidUserData() {
        return request.resource.data.keys().hasAll(['email', 'userType']) &&
               request.resource.data.email is string &&
               request.resource.data.userType in ['patient', 'doctor', 'admin'];
      }
    }
    
    // Patients collection
    match /patients/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create, update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Doctors collection  
    match /doctors/{userId} {
      allow read: if true; // Public reading for doctor discovery
      allow create, update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Appointments collection
    match /appointments/{appointmentId} {
      allow read: if isOwner(resource.data.patientId) || 
                    isOwner(resource.data.doctorId) || 
                    isAdmin();
      allow create: if isAuthenticated() && 
                      (isOwner(request.resource.data.patientId) || isAdmin());
      allow update: if isOwner(resource.data.patientId) || 
                      isOwner(resource.data.doctorId) || 
                      isAdmin();
      allow delete: if isOwner(resource.data.patientId) || isAdmin();
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isAuthenticated();
      allow update: if isOwner(resource.data.userId) || isAdmin();
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
  }
}